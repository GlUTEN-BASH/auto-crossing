#include "SwitchJoystick.h"


#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_RESET 0  // GPIO0
Adafruit_SSD1306 display(OLED_RESET);

int xx = 0;
int yy = 0;
int tt = 3000;

int stat = 0;

bool sut = false;
int mod = 0;

SwitchJoystick_ Joystick;

unsigned long timing;

const unsigned char PROGMEM image [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0xEF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0xF1, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x08, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x08, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x08, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x08, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0E, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x03, 0xC2, 0x11, 0xFE, 0x3F, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x07, 0xE6, 0x1B, 0xFF, 0x7F, 0x80, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x0E, 0x76, 0x18, 0x30, 0x73, 0x80, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0C, 0x36, 0x18, 0x30, 0x61, 0x80, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0F, 0xF6, 0x18, 0x30, 0x61, 0x80, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0F, 0xF6, 0x18, 0x30, 0x61, 0x80, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x0C, 0x36, 0x18, 0x30, 0x61, 0x80, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x0C, 0x37, 0x38, 0x30, 0x73, 0x80, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x0C, 0x37, 0xF8, 0x30, 0x7F, 0x80, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x04, 0x23, 0xF0, 0x20, 0x3F, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0xC7, 0x8F, 0xC7, 0x8F, 0x12, 0x11, 0xF0, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0xEF, 0xDF, 0xEF, 0xDF, 0xB7, 0x1B, 0xF8, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x0C, 0xDC, 0xEE, 0x1C, 0x37, 0x9B, 0x80, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x0C, 0xD8, 0x6C, 0x18, 0x37, 0xDB, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x06, 0x0D, 0xD8, 0x6F, 0x9F, 0x36, 0xFB, 0x38, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x06, 0x0F, 0x98, 0x67, 0xCF, 0xB6, 0x7B, 0x78, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x06, 0x0F, 0x18, 0x60, 0xC1, 0xB6, 0x3B, 0x18, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x07, 0x0F, 0x9C, 0xE1, 0xC3, 0xB6, 0x1B, 0x98, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x07, 0xED, 0xDF, 0xEF, 0xDF, 0xB6, 0x1B, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x03, 0xC4, 0xFF, 0xC7, 0x8F, 0x22, 0x11, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x7E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x77, 0xFB, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x63, 0xE3, 0x00, 0xC0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xE0, 0x03, 0x83, 0xE0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xE0, 0x01, 0x8F, 0x38, 0x03, 0xF8, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x1C, 0x3F, 0xFF, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x38, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM select [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x93, 0x3E, 0x1D, 0x17, 0x7C, 0xC9, 0x11, 0x33, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x94, 0x88, 0x21, 0x12, 0x11, 0x29, 0x1B, 0x4A, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0xF7, 0x88, 0x19, 0x52, 0x11, 0x0F, 0x15, 0x4A, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x94, 0x88, 0x05, 0xB2, 0x11, 0x29, 0x11, 0x4A, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x94, 0x88, 0x39, 0x17, 0x10, 0xC9, 0x11, 0x33, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x9E, 0x22, 0x64, 0x89, 0x3B, 0xA4, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0x50, 0x22, 0x94, 0x89, 0x41, 0x35, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7B, 0x9C, 0x1C, 0x94, 0x89, 0x31, 0x2D, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0x90, 0x08, 0x94, 0x89, 0x09, 0x25, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0x5E, 0x08, 0x63, 0x06, 0x73, 0xA4, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x21, 0xE6, 0x3B, 0xC0, 0x33, 0xEF, 0x98, 0xC9, 0x02, 0x64, 0x4C, 0x64, 0x9C, 0x80, 0x00, 0x44, 0xA1, 0x09, 0x42, 0x00, 0x48, 0x82, 0x25, 0x29, 0x02, 0x94, 0x52, 0x96, 0xA0, 0x40, 0x00, 0x47, 0x21, 0xCF, 0x33, 0x80, 0x78, 0x82, 0x3D, 0x0F, 0x02, 0x93, 0x90, 0x95, 0x98, 0x40, 0x00, 0x44, 0x21, 0x09, 0x0A, 0x08, 0x48, 0x82, 0x25, 0x29, 0x12, 0x91, 0x12, 0x94, 0x84, 0x40, 0x00, 0x24, 0x3D, 0xE9, 0x73, 0xC8, 0x48, 0x82, 0x24, 0xC9, 0x0C, 0x61, 0x0C, 0x64, 0xB8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x30, 0x80, 0x00, 0x00, 0x04, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x20, 0x00, 0x00, 0x01, 0x0C, 0x20, 0x80, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x01, 0x04, 0x24, 0x80, 0x00, 0x00, 0x05, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x09, 0x20, 0x00, 0x00, 0x01, 0x74, 0x2A, 0x80, 0x00, 0x00, 0x05, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x0A, 0xA0, 0x00, 0x00, 0x01, 0x74, 0x24, 0xFF, 0xFF, 0xFF, 0xFD, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x09, 0x20, 0x00, 0x00, 0x01, 0x74, 0x20, 0x80, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x01, 0x04, 0x20, 0x80, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x01, 0x04, 0x2E, 0x80, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x0B, 0xA0, 0x00, 0x00, 0x01, 0x04, 0x2E, 0x80, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x0B, 0xA0, 0x00, 0x00, 0x01, 0x04, 0x2E, 0x80, 0x0F, 0x80, 0x04, 0x90, 0x00, 0x00, 0x00, 0x00, 0x0B, 0xA0, 0x00, 0x00, 0x01, 0x24, 0x20, 0x80, 0x10, 0x40, 0x05, 0x50, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x01, 0x54, 0x20, 0x80, 0x10, 0x40, 0x04, 0x90, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x01, 0x24, 0x20, 0x80, 0x10, 0x40, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x01, 0x04, 0x24, 0x80, 0x10, 0x40, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x09, 0x20, 0x00, 0x00, 0x01, 0x04, 0x20, 0x80, 0x10, 0x40, 0x04, 0x90, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x01, 0x24, 0x20, 0x80, 0x0F, 0x80, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x01, 0x04, 0x38, 0x80, 0x00, 0x00, 0x04, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x20, 0x00, 0x00, 0x01, 0x0C, 0x0F, 0x80, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x80, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x4C, 0x97, 0x25, 0xE8, 0x70, 0x00, 0xE3, 0x19, 0x2F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x52, 0xD4, 0xA5, 0x08, 0x48, 0x00, 0x94, 0xA5, 0x48, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xDE, 0xB4, 0xBD, 0xC8, 0x48, 0x00, 0x94, 0xA1, 0x8E, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x52, 0x94, 0xA5, 0x08, 0x48, 0x00, 0x94, 0xA5, 0x48, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x52, 0x97, 0x25, 0xEF, 0x70, 0x00, 0xE3, 0x19, 0x2F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM men [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x3F, 0xE0, 0x00, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};


void setup() {
  pinMode(8, INPUT_PULLUP);
  pinMode(7, INPUT_PULLUP);
  pinMode(6, INPUT_PULLUP);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.display();
  display.clearDisplay();
  display.setCursor(0, 0);


  display.clearDisplay();
  display.drawBitmap(xx, yy, image, 128, 64, 1);
  display.display();
  delay(tt);


  Joystick.begin();
  delay(100);
  Joystick.setRzAxis(127);
  Joystick.setZAxis(127);
  Joystick.setYAxis(127);
  Joystick.setXAxis(127);
  display.setCursor(0, 0);


  // put your setup code here, to run once:

}

void y_repeat(int count){
  int usage = 0;
  int timert = 0;
  while (usage <= count){
              if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(0);} else{break;}
              while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}
              if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(0);} else{break;}   
              while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} usage++; }
}

void sety(int y){
   delay(100);
   if (digitalRead(6) == HIGH){Joystick.setYAxis(y);}}

void setx(int x){
   delay(100);
   if (digitalRead(6) == HIGH){Joystick.setXAxis(x);}}

void as(){
  int timert = 0;
  while(timert < 70){if (digitalRead(6) == HIGH){delay(1); timert++;}}   
  if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(2);}        
  while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;}}                     
  if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(2);}
}

void hat(int shish){
  int timert = 0;
  while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;}} 
  if (digitalRead(6) == HIGH){delay(100); Joystick.setHatSwitch(shish);}   
  while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;}}                     
  if (digitalRead(6) == HIGH){delay(100); Joystick.setHatSwitch(-1);}}

void loop() {
  if (sut == true) {
    if (digitalRead(8) == LOW) {
      delay(100);
      if (stat > 0) {
        stat--;
      }
      else {
        stat = 6;
      }
    }

    if (digitalRead(7) == LOW) {
      delay(100);
      if (stat < 7) {
        stat++;
      }
      else {
        stat = 0;
      }
    }

    if (digitalRead(6) == LOW) {
      int timert = 0;
      int noice = 0;
      int spamd = 0;
      int al = 0;
      int inv = 0;
      switch (stat) {
        
         case 0:
          delay(100);
          display.setCursor(32, 52);
          display.print("Running...");
          display.display();
          while (digitalRead(6) == HIGH) {
            timert = 0;
            if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(2);} else{break;}       
            while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}                     
            if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(2);} else{break;}
            timert = 0;
            while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}}
          break; 
         case 1:
          delay(100);

          timert = 0;
          display.setCursor(32, 52);
          display.print("Running...");
          display.display();
           if (digitalRead(6) == HIGH){delay(100);  if (digitalRead(6) == HIGH){delay(100); sety(0);} else{break;}    } else{break;}    
          y_repeat(27);
           if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}    
          
           if (digitalRead(6) == HIGH){delay(100); setx(255);} else{break;}    
          y_repeat(4);
           if (digitalRead(6) == HIGH){delay(100); setx(127);} else{break;}    

           if (digitalRead(6) == HIGH){delay(100); sety(255);} else{break;}    
          y_repeat(23);
           if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}    

           if (digitalRead(6) == HIGH){delay(100); setx(255);} else{break;}    
          y_repeat(4);
           if (digitalRead(6) == HIGH){delay(100); setx(127);} else{break;}    

           if (digitalRead(6) == HIGH){delay(100); sety(0);} else{break;}    
          y_repeat(22);
           if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}    

           if (digitalRead(6) == HIGH){delay(100); setx(255);} else{break;}    
          y_repeat(4);
           if (digitalRead(6) == HIGH){delay(100); setx(127);} else{break;}    

           if (digitalRead(6) == HIGH){delay(100); sety(255);} else{break;}    
          y_repeat(22);
           if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}    

           if (digitalRead(6) == HIGH){delay(100); setx(255);} else{break;}    
          y_repeat(4);
           if (digitalRead(6) == HIGH){delay(100); setx(127);} else{break;}    

           if (digitalRead(6) == HIGH){delay(100); sety(0);} else{break;}    
          y_repeat(23);
           if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}    
          break;

         case 2:
           delay(100);
           display.setCursor(32, 52);
           display.print("Running...");
           display.display();    
            if (digitalRead(6) == HIGH){delay(100); sety(255);} else{break;}    
           while (digitalRead(6) == HIGH) {
             timert = 0;
             if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(0);} else{break;}       
             while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}                     
             if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(0);} else{break;}
             timert = 0;
             while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}
             }
            if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}    
           break;
          case 3:
            delay(100);
            display.setCursor(32, 52);
            display.print("Running...");
            display.display();
            while (true) {
              timert = 0;
              if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(2);} else{break;}       
              while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}                     
              if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(2);} else{break;}
              timert = 0;
              while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}}
            break; 
          case 4: 
            delay(100);
            display.setCursor(32, 52);
            display.print("Running...");
            display.display();
             if (digitalRead(6) == HIGH){delay(100); setx(255);} else{break;}    
            while(timert < 70){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}  
            if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(2);} else{break;}       
            while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}                     
            if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(2);} else{break;}
             if (digitalRead(6) == HIGH){delay(100); setx(127);} else{break;}    
            
            while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}    
            
             if (digitalRead(6) == HIGH){delay(100); setx(0);} else{break;}    
            while(timert < 1350){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}  
            if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(2);} else{break;}       
            while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}                     
            if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(2);} else{break;}
             if (digitalRead(6) == HIGH){delay(100); setx(127);} else{break;}    

            while(timert < 2000){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}    
            
             if (digitalRead(6) == HIGH){delay(100); sety(255);} else{break;}    
            while(timert < 3150){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}  
             if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}    

            while(timert < 1000){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}  
            
             if (digitalRead(6) == HIGH){delay(100); sety(0);} else{break;}    
            while(timert < 70){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}  
            if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(2);} else{break;}       
            while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}                     
            if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(2);} else{break;}
             if (digitalRead(6) == HIGH){delay(100); sety(255);} else{break;}    

            while(timert < 4500){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}  
             if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}    
            while(timert < 3000){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}
            spamd = 0;
            while (spamd < 7) {
              timert = 0;
              if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(2);} else{break;}       
              while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}                     
              if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(2);} else{break;}
              timert = 0;
              while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} 
              spamd++;}
           case 5:
            delay(100);
            display.setCursor(32, 52);
            display.print("Running...");
            display.display();
            while (digitalRead(6) == HIGH){

            while (al < 30){
              if (digitalRead(6) == HIGH){delay(100); Joystick.pressButton(2);} else{break;}       
              while(timert < 200){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}                     
              if (digitalRead(6) == HIGH){delay(100); Joystick.releaseButton(2);} else{break;}
              al++;
              }
            al = 0;
            
             if (digitalRead(6) == HIGH){delay(100); setx(0);} else{break;}    
            while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} 
            y_repeat(2);
            while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} 
             if (digitalRead(6) == HIGH){delay(100); setx(127);} else{break;}    

            while(timert < 300){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} 
            
             if (digitalRead(6) == HIGH){delay(100); setx(255);} else{break;}    
            while(timert < 100){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} 
            y_repeat(2);
            while(timert < 120){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} 
             if (digitalRead(6) == HIGH){delay(100); setx(127);} else{break;}    
            while(timert < 300){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} 

             if (digitalRead(6) == HIGH){delay(100); sety(0);} else{break;}    
            while(timert < 80){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}}
             if (digitalRead(6) == HIGH){delay(100); sety(127);} else{break;}     
            while(timert < 300){if (digitalRead(6) == HIGH){delay(1); timert++;} else{delay(100); break;}} }
          case 6:
           delay(100);
           display.setCursor(32, 52);
           display.print("Running...");
           display.display();
           while(inv < 10){
             if (digitalRead(6) == HIGH){delay(100); as();} else{break;}    
             if (digitalRead(6) == HIGH){delay(100); hat(90);} else{break;}    
            inv++;
            }
            inv = 0;
             if (digitalRead(6) == HIGH){delay(100); hat(180);} else{break;}    
            
            while(inv < 10){
             if (digitalRead(6) == HIGH){delay(100); as();} else{break;}    
            hat(270);
            inv++;
            }
            inv = 0;
             if (digitalRead(6) == HIGH){delay(100); hat(180);} else{break;}    
            
            while(inv < 10){
             if (digitalRead(6) == HIGH){delay(100); as();} else{break;}    
             if (digitalRead(6) == HIGH){delay(100); hat(90);} else{break;}    
            inv++;
            }
            inv = 0;
             if (digitalRead(6) == HIGH){delay(100); hat(180);} else{break;}    
            
            while(inv < 10){
             if (digitalRead(6) == HIGH){delay(100); as();} else{break;}    
            hat(270);
            inv++;
            }
            inv = 0;
             if (digitalRead(6) == HIGH){delay(100); hat(180);} else{break;}    
             if (digitalRead(6) == HIGH){delay(100); as();} else{break;}    
             if (digitalRead(6) == HIGH){delay(100); hat(-1);} else{break;}    
            while(inv < 32){ if (digitalRead(6) == HIGH){delay(100); as();} else{break;}     inv++;}
            inv = 0;
            
            break;
            }
          }
          
    
          
          
    
      
            

      
     

    switch (stat) {
      case 0:
        display.clearDisplay();
        display.drawBitmap(xx, yy, men, 128, 64, 1);
        display.setCursor(39, 30);
        display.print("Autocraft");
        display.display();
        break;
      case 1:
        display.clearDisplay();
        display.drawBitmap(xx, yy, men, 128, 64, 1);
        display.setCursor(53, 25);
        display.print("Cube");
        display.setCursor(43, 35);
        display.print("Autopick");
        display.display();
        break;
      case 2:
        display.clearDisplay();
        display.drawBitmap(xx, yy, men, 128, 64, 1);
        display.setCursor(43, 31);
        display.print("Autopick");
        display.display();
        break;
      case 3:
        display.clearDisplay();
        display.drawBitmap(xx, yy, men, 128, 64, 1);
        display.setCursor(53, 25);
        display.print("Auto");
        display.setCursor(35, 39);
        display.print("Star Catch");
        display.display();
        break;
      case 4:
        display.clearDisplay();
        display.drawBitmap(xx, yy, men, 128, 64, 1);
        display.setCursor(53, 25);
        display.print("Auto");
        display.setCursor(34, 39);
        display.print("Stone Break");
        display.display();
        break;
      case 5:
        display.clearDisplay();
        display.drawBitmap(xx, yy, men, 128, 64, 1);
        display.setCursor(53, 25);
        display.print("Auto");
        display.setCursor(40, 39);
        display.print("Tree Pick");
        display.display();
        break;
      case 6:
        display.clearDisplay();
        display.drawBitmap(xx, yy, men, 128, 64, 1);
        display.setCursor(53, 25);
        display.print("Auto");
        display.setCursor(42, 39);
        display.print("Inv Sell");
        display.display();
        break;


    }
  
  }

  
  else{
    if (digitalRead(8) == LOW) {
      delay(100);
      if (mod > 0) {
        mod--;
      }
      else {
        mod = 1;
      }
    }

    if (digitalRead(6) == LOW) {
      switch (mod) {
        case 0:
          display.clearDisplay();
          display.setCursor(28, 23);
          display.setTextColor(1);
          display.setTextSize(1);
          display.print("Connecting...");
          display.display();
          delay(5000);
          Joystick.pressButton(5);
          delay(200);
          Joystick.releaseButton(5);
          delay(300);
          Joystick.pressButton(5);
          delay(200);
          Joystick.releaseButton(5);
          delay(1000);
          Joystick.pressButton(2);
          delay(200);
          Joystick.releaseButton(2);
          delay(200);
          Joystick.pressButton(2);
          delay(200);
          Joystick.releaseButton(2);
          display.clearDisplay(); 
          display.setCursor(50, 23);
          display.print("Done!");
          display.display();
          delay(1000);
          display.clearDisplay();
          display.display();
          sut = true;
          break;
        case 1:
          display.clearDisplay(); 
          display.setCursor(50, 23);
          Joystick.pressButton(2);
          delay(200);
          Joystick.releaseButton(2);
          display.print("Done!");
          display.display();
          delay(1000);
          display.clearDisplay(); 
          display.display();
          sut = true;
          break;
      }
    }
 
  if (digitalRead(7) == LOW) {
    delay(100);
    if (mod < 1) {
      mod++;
    }
    else {
      mod = 0;
    }
  }
  if(mod == 0) {
      display.clearDisplay();
      display.drawBitmap(xx, yy, select, 128, 64, 1);
      display.setTextColor(1);
      display.setTextSize(1);
      display.setCursor(53, 54);
      display.print("mode");
      display.setCursor(62, 39);
      display.print(1);
      display.display();
  }
  if(mod == 1){
      display.clearDisplay();
      display.drawBitmap(xx, yy, select, 128, 64, 1);
      display.setTextColor(1);
      display.setTextSize(1);
      display.setCursor(53, 54);
      display.print("mode");
      display.setCursor(62, 39);
      display.print(2);
      display.display();
  }

}

 }

// put your main code here, to run repeatedly:
